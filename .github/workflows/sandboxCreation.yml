name: Sandbox creation

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Reference that will be checkout to support post creation steps
        type: string
        required: true
      sandboxName: 
        description: Name of the sandbox to be created
        type: string
        required: true
      licenseType:
        description: Type of sandbox license. Could be Developer, Developer_Pro, Partial, and Full
        type: choice
        required: true
        options:
        - Developer
        - Developer_Pro
        - Partial
        - Full
      email:
        description: Email for the Sys Admin user 
        type: string
        required: true
      wait:
        description: Wait time for sandbox creation
        default: 120
        type: string
      buildfile:
        description: Path to the buildfile.json configured to run after sandbox creation - to automate post creation steps
        type: string
        required: false
      connectedApp:
        description: API name for the connected app to be retrieved so the consumer key can be logged directly on the job - this is just used to facilitate the pipeline configuration if there sandbox needs to be connected by the CI server
        type: string
        required: false
      defaultDirectory: 
        description: Defatul directory as per sfdx-project.json - to be used to log the connected app consumer key
        type: string
        default: force-app
        required: false

# Jobs to be executed
jobs:
  sandbox-creation:
    runs-on: ubuntu-latest
    container: tnascimento013/latam_salesforcedx_industries_orgdevmodebuilds:latest
    environment: prod
    steps:

      - name: Set Directory as Safe 
        run: git config --system --add safe.directory "$GITHUB_WORKSPACE"

      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Extracting private key
        run: 'echo "${{ secrets.JWT_KEY_PROD }}" > server.key'

      - name: Authenticate on production
        run: sf org login jwt --instance-url https://login.salesforce.com --client-id ${{ vars.CLIENT_ID }} --username ${{ vars.USERNAME }} --jwt-key-file server.key --alias prodOrg

      - name: Create sandbox
        run: sf org create sandbox --name ${{ inputs.sandboxName }} --license-type ${{ inputs.licenseType }} --alias sdbx --target-org prodOrg --wait ${{ inputs.wait }} --pool-interval=60

      - name: Create SysAdmin user
        run: sf org create user email=${{ inputs.email }} generatepassword=true username=${{ inputs.email }} --set-unique-username profileName='System Administrator' --target-org sdbx --set-alias sdbxSysAdmin 

      - name: Post creation steps
        if: github.event.inputs.buildfile != ''
        run: |
          export HOME=/root
          sf builds deploy --buildfile ${{ inputs.buildfile }} --target-org sdbxSysAdmin

      - name: Retrieving Connected App Consumer Key
        if: github.event.inputs.connectedApp != ''
        run: |
          sf project retrieve start --metadata=ConnectedApp:${{ inputs.connectedApp }} --target-org sdbxSysAdmin
          cat ${{ inputs.defaultDirectory }}/main/default/connectedApps/${{ inputs.connectedApp }}.connectedApp-meta.xml | grep consumerKey