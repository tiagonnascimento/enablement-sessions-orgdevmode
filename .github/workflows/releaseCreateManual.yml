name: Release - create release and artifact

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Git ref from where the release/artifact is going to be downloaded and used as base for the deploy
        type: string
        required: true
      tag:
        description: Tag name to use to create the release
        type: string
        required: true
      environment:
        description: Environment that is going to be used to test the build before creating the release
        type: string
        required: true

# Jobs to be executed
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    container: tnascimento013/latam_salesforcedx_industries_orgdevmodebuilds:latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Installing missing CLIs / Plugins
        run: echo "y" | sf plugins install sf-orgdevmode-builds

      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Extracting private key
        run: 'echo "${{ secrets.JWT_KEY_NONPROD }}" > server.key'

      - name: Running the build & deploy
        run: sf builds deploy --buildfile manifest/buildfile.json --client-id ${{ vars.CLIENT_ID }} --instance-url ${{ vars.INSTANCE_URL }} --username ${{ vars.USERNAME }} --jwt-key-file server.key

      - name: Setting git safe.directory
        run: git config --global --add safe.directory '*'

      - name: Archiving Repository
        run: git archive -o ${{ github.event.repository.name }}-${{ inputs.tag }}.zip HEAD

      - name: Create tag
        uses: actions/github-script@v6.4.1
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ inputs.tag }}',
              sha: context.sha
            })

      - name: Upload Assets
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: ${{ secrets.SVC_CLI_BOT_GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.tag }}
          files: ${{ github.event.repository.name }}-${{ inputs.tag }}.zip
